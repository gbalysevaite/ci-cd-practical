# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@4.7

jobs:
  build_and_test:

    docker:
      - image: circleci/node:14.18.1
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: npm run build
      - run: npm test
      - run: echo SURGE_LOGIN
      - run: echo SURGE_TOKEN
      # Download and cache dependencies
#      - restore_cache:
#          keys:
#            - v1-dependencies-{{ checksum "package.json" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-

#      - save_cache:
#          paths:
#            - node_modules
#          key: v1-dependencies-{{ checksum "package.json" }}
      # run placeholder test
      #- run: npm test
    # This is the node version to use for the `cimg/node` tag
    # Relevant tags can be found on the CircleCI Developer Hub
    # https://circleci.com/developer/images/image/cimg/node
    # If you are using yarn, change the line below from "npm" to "yarn"

  deploy_to_staging:
    docker:
      - image: circleci/node:7.10
    steps:
      - checkout
      - run: npm install surge
      - run: npx surge build/ https://balysevaite-staging.surge.sh/

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-test-deploy: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build_and_test
      - deploy_to_staging:
          requires:
            - build_and_test
          filters:
            branches:
              only: master